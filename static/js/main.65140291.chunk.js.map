{"version":3,"sources":["components/TopBar.js","images/jumboImage.jpg","components/Jumbo.js","components/CardStyled.js","components/Personal.js","components/EducationForm.js","components/Education.js","components/CareerForm.js","components/Career.js","components/Footer.js","App.js","index.js"],"names":["TopBar","Navbar","bg","variant","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","JumboStyled","styled","div","jumboImage","Jumbo","Jumbotron","fluid","Container","CardStyled","Personal","props","useState","personalData","setPersonalData","editMode","setEditMode","as","Form","onSubmit","e","preventDefault","Row","Col","Group","controlId","Label","Control","value","name","type","placeholder","onChange","target","secondName","email","phone","portfolio","city","country","Button","size","onClick","EducationForm","index","deleteSchool","schoolsList","setSchoolsList","useEffect","school","title","endDate","length","Education","defaultSchool","splice","block","map","CareerForm","deleteCompany","companiesList","setCompaniesList","tasks","tasksList","setTasksList","company","position","task","indexTask","prevTasksList","updateTasksList","deleteTask","join","duration","Career","defaultCompany","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65140291.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction TopBar() {\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='sm' className='justify-content-between w-100'>\n        <Navbar.Brand href='#home'>Inicio</Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav'/>\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='ml-auto'>\n            <Nav.Link href='#personal'>Personal</Nav.Link>\n            <Nav.Link href='#education'>Formación</Nav.Link>\n            <Nav.Link href='#career'>Profesional</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>  \n    </header>\n  )\n}\n\nexport default TopBar","export default __webpack_public_path__ + \"static/media/jumboImage.73097ab4.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport jumboImage from '../images/jumboImage.jpg';\nimport Container from 'react-bootstrap/Container';\n\nconst JumboStyled = styled.div`\n  .jumbo {\n    background: url(${jumboImage}) no-repeat fixed top;\n    background-size: cover;\n    height: 164px;\n    position: relative;\n    z-index: -2;\n    color: white;\n  }\n`;\n\nconst Jumbo = () => (\n  <JumboStyled>\n    <Jumbotron fluid className='jumbo'>\n      <Container>\n          <h1>Crea tu Curriculum Vitae</h1>\n          <p>Cuéntale al mundo quién eres.</p>\n      </Container>\n    </Jumbotron>\n  </JumboStyled>  \n)\n\nexport default Jumbo\n","import styled from 'styled-components';\n\nconst CardStyled = styled.div`\n  .title {\n    text-align: center;\n  }\n\n  .card {\n    margin-bottom: 20px;\n    max-width: 650px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  }\n\n  .submitButton, .deleteButton {\n    margin-bottom: 1em;\n  }\n\n  .inputTask {\n    width: 620px;\n    margin-bottom: 0.3em; \n  }\n\n  .addTaskButton {\n    border-radius: 10px;\n  }\n  \n  .deleteTaskButton {\n    margin-top: 0.3em;\n    float: right;\n  }\n\n  p {\n    color: #007bff;\n  }\n  `;\n\n  export default CardStyled;","/* import React, { Component } from 'react'; */\nimport React, { useState } from 'react';\nimport CardStyled from './CardStyled';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button'\n\n// FUNCTIONAL HOOKS\n\nconst Personal = (props) => {\n\n  const [personalData, setPersonalData] = useState(props.personalData);\n  const [editMode, setEditMode] = useState(true);\n\n  return (\n    <CardStyled>\n      <Container id='personal' className='mt-5 card' as='section'>\n        <h2 className='title'>Información Personal</h2>\n\n        <Form className='mt-4' onSubmit={(e)=>e.preventDefault()}>\n\n          <Form.Row className='justify-content-between'>\n            <Col>\n              <Form.Group controlId='formGridName'>\n                <Form.Label>Nombre</Form.Label>\n\n                {editMode ?\n                <Form.Control \n                  value={personalData.name} \n                  type='text' \n                  placeholder='Nombre' \n                  onChange={(e) => setPersonalData({...personalData, name: e.target.value})}\n                  />\n                  : <p>{personalData.name}</p>\n                  }\n\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId='formGridSecondName'>\n                <Form.Label>Apellidos</Form.Label>\n\n                {editMode ?\n                <Form.Control \n                  value={personalData.secondName} \n                  type='text' \n                  placeholder='Apellidos' \n                  onChange={(e) => setPersonalData({...personalData, secondName: e.target.value})}/>\n                  : <p>{personalData.secondName}</p>\n                  }\n\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          <Form.Group controlId='formGridEmail'>\n            <Form.Label>Email</Form.Label>\n\n            {editMode ?\n            <Form.Control \n              value={personalData.email} \n              type='email' \n              placeholder='joankii@theodinproject.com' \n              onChange={(e) => setPersonalData({...personalData, email: e.target.value})}/>\n              : <p>{personalData.email}</p>\n              }\n\n          </Form.Group>\n          <Form.Row className='justify-content-between'>\n            <Col>\n              <Form.Group controlId='formGridPhone'>\n                <Form.Label>Teléfono</Form.Label>\n\n                {editMode ?\n                <Form.Control \n                  value={personalData.phone} \n                  type='text' \n                  placeholder='Teléfono' \n                  onChange={(e) => setPersonalData({...personalData, phone: e.target.value})}/>\n                  : <p>{personalData.phone}</p>\n                  } \n\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId='formGridPortfolio'>\n                <Form.Label>Portfolio</Form.Label>\n\n                {editMode ?\n                <Form.Control \n                  value={personalData.portfolio} \n                  type='url' \n                  placeholder='https://github.com/joan-kii' \n                  onChange={(e) => setPersonalData({...personalData, portfolio: e.target.value})}/>\n                  : <p>{personalData.portfolio}</p>\n                  }\n\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          <Form.Row className='justify-content-between'>\n            <Col>\n              <Form.Group controlId='formGridCity'>\n                <Form.Label>Ciudad</Form.Label>\n\n                {editMode ?\n                <Form.Control \n                  value={personalData.city} \n                  type='text' \n                  placeholder='Ciudad' \n                  onChange={(e) => setPersonalData({...personalData, city: e.target.value})}/>\n                  : <p>{personalData.city}</p>\n                  }\n\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId='formGridCountry'>\n                <Form.Label>País</Form.Label>\n\n                {editMode ?\n                <Form.Control \n                  value={personalData.country} \n                  type='text' \n                  placeholder='País' \n                  onChange={(e) => setPersonalData({...personalData, country: e.target.value})}/>\n                  : <p>{personalData.country}</p>\n                  }\n\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          <Button \n            className='submitButton'\n            variant={editMode ? 'primary' : 'secondary'}\n            size='lg'\n            onClick={() => setEditMode(!editMode)}>\n              {editMode ? 'Enviar' : 'Editar'}\n          </Button>\n\n        </Form>\n      </Container>\n    </CardStyled>    \n  )\n}\n\nexport default Personal;\n\n// CLASS COMPONENT\n\n/* class Personal extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.toggleEditMode = this.toggleEditMode.bind(this);\n\n    this.state = {\n      editMode: true\n    }\n  }\n\n  toggleEditMode() {\n    this.setState((prevState) => ({\n      editMode: !prevState.editMode\n    }))\n  }\n\n  render() {\n    const {updateState, info, rootName} = this.props;\n    const { name, secondName, email, phone, \n      portfolio, city, country } = info;\n\n    const editMode = this.state.editMode;  \n\n    return (\n      <CardStyled>\n        <Container id='personal' className='mt-5 card' as='section'>\n          <h2 className='title'>Información Personal</h2>\n\n          <Form className='mt-4' onSubmit={(e)=>e.preventDefault()}>\n\n            <Form.Row className='justify-content-between'>\n              <Col>\n                <Form.Group controlId='formGridName'>\n                  <Form.Label>Nombre</Form.Label>\n\n                  {editMode ?\n                  <Form.Control \n                    value={name} \n                    type='text' \n                    placeholder='Nombre' \n                    onChange={(e) => updateState(rootName, \n                      {...this.props.info, name: e.target.value})}\n                    />\n                    : <p>{name}</p>\n                    }\n\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId='formGridSecondName'>\n                  <Form.Label>Apellidos</Form.Label>\n\n                  {editMode ?\n                  <Form.Control \n                    value={secondName} \n                    type='text' \n                    placeholder='Apellidos' \n                    onChange={(e) => updateState(rootName, \n                      {...this.props.info, secondName: e.target.value})}/>\n                    : <p>{secondName}</p>\n                    }\n\n                </Form.Group>\n              </Col>\n            </Form.Row>\n\n            <Form.Group controlId='formGridEmail'>\n              <Form.Label>Email</Form.Label>\n\n              {editMode ?\n              <Form.Control \n                value={email} \n                type='email' \n                placeholder='joankii@theodinproject.com' \n                onChange={(e) => updateState(rootName, \n                  {...this.props.info, email: e.target.value})}/>\n                : <p>{email}</p>\n                }\n\n            </Form.Group>\n            <Form.Row className='justify-content-between'>\n              <Col>\n                <Form.Group controlId='formGridPhone'>\n                  <Form.Label>Teléfono</Form.Label>\n\n                  {editMode ?\n                  <Form.Control \n                    value={phone} \n                    type='text' \n                    placeholder='Teléfono' \n                    onChange={(e) => updateState(rootName, \n                      {...this.props.info, phone: e.target.value})}/>\n                    : <p>{phone}</p>\n                    } \n\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId='formGridPortfolio'>\n                  <Form.Label>Portfolio</Form.Label>\n\n                  {editMode ?\n                  <Form.Control \n                    value={portfolio} \n                    type='url' \n                    placeholder='https://github.com/joan-kii' \n                    onChange={(e) => updateState(rootName, \n                      {...this.props.info, portfolio: e.target.value})}/>\n                    : <p>{portfolio}</p>\n                    }\n\n                </Form.Group>\n              </Col>\n            </Form.Row>\n\n            <Form.Row className='justify-content-between'>\n              <Col>\n                <Form.Group controlId='formGridCity'>\n                  <Form.Label>Ciudad</Form.Label>\n\n                  {editMode ?\n                  <Form.Control \n                    value={city} \n                    type='text' \n                    placeholder='Ciudad' \n                    onChange={(e) => updateState(rootName, \n                      {...this.props.info, city: e.target.value})}/>\n                    : <p>{city}</p>\n                    }\n\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId='formGridCountry'>\n                  <Form.Label>País</Form.Label>\n\n                  {editMode ?\n                  <Form.Control \n                    value={country} \n                    type='text' \n                    placeholder='País' \n                    onChange={(e) => updateState(rootName, \n                      {...this.props.info, country: e.target.value})}/>\n                    : <p>{country}</p>\n                    }\n\n                </Form.Group>\n              </Col>\n            </Form.Row>\n\n            <Button \n              className='submitButton'\n              variant={editMode ? 'primary' : 'secondary'}\n              size='lg'\n              onClick={this.toggleEditMode}>\n                {editMode ? 'Enviar' : 'Editar'}\n            </Button>\n\n          </Form>\n        </Container>\n      </CardStyled>    \n    )\n  }\n}\n\nexport default Personal */","/* import React, { Component } from 'react'; */\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button'; \n\n// FUNCTIONAL HOOKS\n\nconst EducationForm = (props) => {\n  \n  const {index, deleteSchool} = props;\n  const [schoolsList, setSchoolsList] = useState(props.schoolsList);\n  const [editMode, setEditMode] = useState(true);\n\n  useEffect(() => { \n    setSchoolsList(props.schoolsList)\n  }, [props.schoolsList])\n\n  return (\n    <Form className='mt-4' onSubmit={(e) => e.preventDefault()} >\n\n      <Form.Group controlId='formGridSchool'>\n        <Form.Label>Centro Educativo</Form.Label>\n\n        {editMode ?\n        <Form.Control \n          value={schoolsList[index].school}\n          type='text' \n          placeholder='Centro Educativo'\n          onChange={(e) => setSchoolsList([...schoolsList], \n            schoolsList[index].school = e.target.value)} />\n          : <p>{schoolsList[index].school}</p>\n          }\n\n      </Form.Group>\n\n      <Form.Group controlId='formGridTitle'>\n        <Form.Label>Titulación</Form.Label>\n\n        {editMode ?\n        <Form.Control \n          value={schoolsList[index].title} \n          type='text' \n          placeholder='Titulación'\n          onChange={(e) => setSchoolsList([...schoolsList], \n            schoolsList[index].title = e.target.value)} />\n          : <p>{schoolsList[index].title}</p>\n          }\n\n      </Form.Group>\n\n      <Form.Row className='justify-content-between'>\n        <Col>\n          <Form.Group controlId='formGridEndDate'>\n              <Form.Label>Fecha de Finalización</Form.Label>\n\n              {editMode ?\n              <Form.Control \n                value={schoolsList[index].endDate} \n                type='date' \n                placeholder='Fecha'\n                onChange={(e) => setSchoolsList([...schoolsList], \n                  schoolsList[index].endDate = e.target.value)} />\n                : <p>{schoolsList[index].endDate}</p>\n                }\n\n          </Form.Group>\n        </Col>\n      </Form.Row>\n\n      <Form.Row className='justify-content-between'>\n        <Button\n          className='submitButton'\n          variant={editMode ? 'primary' : 'secondary'}\n          size='lg'\n          onClick={() => setEditMode(!editMode)}>\n            {editMode ? 'Enviar' : 'Editar'}\n        </Button>\n\n        {schoolsList.length > 1 &&\n          <Button\n            className='deleteButton'\n            variant='danger'\n            size='lg'\n            onClick={() => deleteSchool(index)}>\n              Eliminar\n          </Button>}\n      </Form.Row>   \n    </Form>\n  )\n}\n\nexport default EducationForm;\n\n// CLASS COMPONENT\n\n/* class EducationForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggleEditMode = this.toggleEditMode.bind(this);\n    this.updateSchool = this.updateSchool.bind(this);\n    this.deleteSchool = this.deleteSchool.bind(this);\n\n    this.state = {\n      editMode: true      \n    }\n  }\n\n  toggleEditMode() {\n    this.setState((prevState) => ({\n      editMode: !prevState.editMode\n    }))\n  }\n\n  updateSchool(property, index, value) {\n    const {updateState, schools, rootName} = this.props;\n\n    schools[index] = {...schools[index],\n    [property]: value};\n\n    updateState(rootName, \n      {schools: schools})\n  }\n\n  deleteSchool(index) {\n    const {updateState, schools, rootName} = this.props;\n\n    schools.splice(index, 1);\n\n    updateState(rootName, \n      {schools: schools})\n  }\n    \n  render() {\n    const {index, schools} = this.props;\n    const {school, title, endDate} = schools;\n    \n    const editMode = this.state.editMode;\n\n    return (\n      <Form className='mt-4' onSubmit={(e)=>e.preventDefault()}>\n\n        <Form.Group controlId='formGridSchool'>\n          <Form.Label>Centro Educativo</Form.Label>\n\n          {editMode ?\n          <Form.Control \n            value={school}\n            type='text' \n            placeholder='Centro Educativo'\n            onChange={(e) => this.updateSchool('school', index, e.target.value)}\n              />\n            : <p>{schools[index].school}</p>\n            }\n\n        </Form.Group>\n\n        <Form.Group controlId='formGridTitle'>\n          <Form.Label>Titulación</Form.Label>\n\n          {editMode ?\n          <Form.Control \n            value={title} \n            type='text' \n            placeholder='Titulación'\n            onChange={(e) => this.updateSchool('title', index, e.target.value)}\n            />\n            : <p>{schools[index].title}</p>\n            }\n\n        </Form.Group>\n\n        <Form.Row className='justify-content-between'>\n          <Col>\n            <Form.Group controlId='formGridEndDate'>\n                <Form.Label>Fecha de Finalización</Form.Label>\n\n                {editMode ?\n                <Form.Control \n                  value={endDate} \n                  type='date' \n                  placeholder='Fecha'\n                  onChange={(e) => this.updateSchool('endDate', index, e.target.value)}\n                  />\n                  : <p>{schools[index].endDate}</p>\n                  }\n\n            </Form.Group>\n          </Col>\n        </Form.Row>\n\n        <Form.Row className='justify-content-between'>\n          <Button\n            className='submitButton'\n            variant={editMode ? 'primary' : 'secondary'}\n            size='lg'\n            onClick={this.toggleEditMode}>\n              {editMode ? 'Enviar' : 'Editar'}\n          </Button>\n\n          {schools.length > 1 &&\n            <Button\n              className='deleteButton'\n              variant='danger'\n              size='lg'\n              onClick={() => this.deleteSchool(index)} >\n                Eliminar\n            </Button>}\n        </Form.Row>   \n      </Form>\n    )\n  }\n}\n\nexport default EducationForm; */\n","/* import React, { Component } from 'react'; */\nimport React, { useState } from 'react';\nimport CardStyled from './CardStyled';\nimport EducationForm from './EducationForm'; \nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\n// FUNCTIONAL HOOK\n\nconst Education = (props) => {\n\n  const [schoolsList, setSchoolsList] = useState(props.schoolsList);\n  const defaultSchool = {school: '', title: '', endDate: ''};\n\n  const deleteSchool = (index) => {\n    schoolsList.splice(index, 1);\n    setSchoolsList([...schoolsList]);\n  };\n  \n  return (\n    <CardStyled>\n      <Container id='education' className='mt-5 card' as='section'>\n      <h2 className='title'>Formación</h2>\n      <Button \n        variant='primary' \n        onClick={() => setSchoolsList([...schoolsList, defaultSchool])}\n        block >+ Anadir Formación +</Button>\n      {schoolsList.map((school, index) => \n        <EducationForm \n          key={index}\n          index={index}\n          schoolsList={schoolsList}\n          deleteSchool={deleteSchool} />\n          )}\n      </Container>\n    </CardStyled>\n  )\n};\n\nexport default Education\n\n// CLASS COMPONENT\n\n/* class Education extends Component {\n  constructor(props) {\n    super(props)\n    this.addSchool = this.addSchool.bind(this);\n  }\n\n  addSchool(schools) {\n    const {updateState, rootName} = this.props;\n    const newSchool = Object.keys(schools[0]).reduce((prev, current) => {\n      return {\n        ...prev,\n        [current]: '',\n      }})\n\n    schools.push(newSchool);\n\n    updateState(rootName, \n      {schools: schools})\n  }\n  \n  render() {\n    const {info} = this.props;\n    const {schools} = info;\n    \n    return (\n      <CardStyled>\n        <Container id='education' className='mt-5 card' as='section'>\n        <h2 className='title'>Formación</h2>\n        <Button \n          variant='primary' \n          onClick={() => this.addSchool(schools)}\n          block>+ Anadir Formación +</Button>\n        {schools.map((school, index) => \n          <EducationForm \n            key={index}\n            index={index}\n            schools={schools} />\n            )}\n        </Container>\n      </CardStyled>\n    )\n  }\n}\n\nexport default Education */\n\n","/* import React, { Component } from 'react'; */\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button'; \n\n// FUNCTIONAL HOOK\n\nconst CareerForm = (props) => {\n\n  const {index, deleteCompany} = props;\n  const [companiesList, setCompaniesList] = useState(props.companiesList);\n  const [tasksList, setTasksList] = useState(companiesList[index].tasks);\n  const [editMode, setEditMode] = useState(true);\n\n  const deleteTask = (indexTask) => {\n    tasksList.splice(indexTask, 1);\n    setTasksList([...tasksList]);\n  };\n\n  useEffect(() => { \n    setCompaniesList(props.companiesList)\n  }, [props.companiesList])\n\n  useEffect(() => {\n    setTasksList(tasksList)\n  }, [tasksList])\n  \n  const updateTasksList = (indexTask, value) => {\n    setTasksList(prevTasksList => [...tasksList], \n      tasksList[indexTask] = value);\n    setCompaniesList([...companiesList],\n      companiesList[index].tasks = tasksList);\n  };\n\n  return (\n    <Form className='mt-4' onSubmit={(e)=>e.preventDefault()}>\n\n      <Form.Group controlId='formGridCompany'>\n        <Form.Label>Empresa</Form.Label>\n\n        {editMode ?\n        <Form.Control \n          value={companiesList[index].company}\n          type='text' \n          placeholder='Empresa'\n          onChange={(e) => setCompaniesList([...companiesList], \n            companiesList[index].company = e.target.value)} />\n          : <p>{companiesList[index].company}</p>\n          }\n\n      </Form.Group>\n\n      <Form.Group controlId='formGridPosition'>\n        <Form.Label>Cargo</Form.Label>\n\n        {editMode ?\n        <Form.Control \n          value={companiesList[index].position} \n          type='text' \n          placeholder='Cargo'\n          onChange={(e) => setCompaniesList([...companiesList], \n            companiesList[index].position = e.target.value)} />\n          : <p>{companiesList[index].position}</p>\n          }\n\n      </Form.Group>\n\n      <Form.Group controlId='formGridTasks'>\n        <Form.Label>\n          Tareas {editMode && (\n            <Button\n            className='addTaskButton'\n            variant='light'\n            onClick={() => setTasksList([...tasksList, ''])} >+</Button>)}\n        </Form.Label>\n\n        {editMode ? tasksList.map((task, indexTask) => \n          <div key={indexTask} >\n            <Form.Row>\n              <Col>\n                <Form.Control \n                  className='inputTask'\n                  value={tasksList[indexTask]}\n                  type='text' \n                  placeholder='Tareas'\n                  onChange={(e) => updateTasksList(indexTask,\n                    e.target.value)} />\n              </Col>\n              <Col>\n              {tasksList.length > 1 &&\n                (<Button \n                  className='deleteTaskButton'\n                  variant='outline-danger'\n                  size='sm'\n                  onClick={() => deleteTask(indexTask)} >\n                    Borrar\n                  </Button>)}\n              </Col>\n            </Form.Row>      \n          </div>)\n            : <p>{tasksList.join(' - ')}</p>\n            }\n\n      </Form.Group>\n\n      <Form.Row className='justify-content-between'>\n        <Col>\n          <Form.Group controlId='formGridDuration'>\n              <Form.Label>Duración</Form.Label>\n\n              {editMode ?\n              <Form.Control \n                value={companiesList[index].duration} \n                type='text' \n                placeholder='3 años y 6 meses'\n                onChange={(e) => setCompaniesList([...companiesList], \n                  companiesList[index].duration = e.target.value)} />\n                : <p>{companiesList[index].duration}</p>\n                }\n\n          </Form.Group>\n        </Col>\n\n        <Col>\n          <Form.Group controlId='formGridEndDate'>\n              <Form.Label>Fecha de Finalización</Form.Label>\n\n              {editMode ?\n              <Form.Control \n                value={companiesList[index].endDate} \n                type='date' \n                placeholder='Fecha'\n                onChange={(e) => setCompaniesList([...companiesList], \n                  companiesList[index].endDate = e.target.value)} />\n                : <p>{companiesList[index].endDate}</p>\n                }\n\n          </Form.Group>\n        </Col>\n      </Form.Row>\n\n      <Form.Row className='justify-content-between'>\n        <Button\n          className='submitButton'\n          variant={editMode ? 'primary' : 'secondary'}\n          size='lg'\n          onClick={() => setEditMode(!editMode)}>\n            {editMode ? 'Enviar' : 'Editar'}\n        </Button>\n\n        {companiesList.length > 1 &&\n          <Button\n            className='deleteButton'\n            variant='danger'\n            size='lg'\n            onClick={() => deleteCompany(index)} >\n              Eliminar\n          </Button>}\n\n      </Form.Row>   \n    </Form>\n  )\n};\n\nexport default CareerForm;\n\n// CLASS COMPONENT\n\n/* class CareerForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggleEditMode = this.toggleEditMode.bind(this);\n    this.updateCompany = this.updateCompany.bind(this);\n    this.updateCareer = this.updateCareer.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n\n    this.state = {\n      editMode: true      \n    }\n  }\n\n  toggleEditMode() {\n    this.setState((prevState) => ({\n      editMode: !prevState.editMode\n    }))\n  }\n\n  updateCompany(property, indexCompany, value) {\n    const {updateState, companies, rootName} = this.props;\n\n    companies[indexCompany] = {...companies[indexCompany],\n    [property]: value};\n\n    updateState(rootName, \n      {companies: companies})\n  }\n\n  deleteCompany(indexCompany) {\n    const {updateState, companies, rootName} = this.props;\n\n    companies.splice(indexCompany, 1);\n\n    updateState(rootName, \n      {companies: companies})\n  }\n\n  updateCareer(indexCompany, indexTask, value) {\n    const {updateState, companies, rootName} = this.props; \n\n    companies[indexCompany].tasks[indexTask] = value;\n\n    updateState(rootName, \n      {companies: companies})\n  }\n\n  addTask(indexCompany) {\n    const {updateState, companies, rootName} = this.props; \n\n    companies[indexCompany].tasks.push('');\n\n    updateState(rootName, \n      {companies: companies})\n  }\n\n  deleteTask(indexCompany, indexTask) {\n    const {updateState, companies, rootName} = this.props; \n\n    companies[indexCompany].tasks.splice(indexTask, 1);\n\n    updateState(rootName, \n      {companies: companies})\n  }\n    \n  render() {\n    const {index, companies} = this.props;\n    const {company, position, tasks, duration, endDate} = companies[index];\n    \n    const editMode = this.state.editMode;\n\n    return (\n      <Form className='mt-4' onSubmit={(e)=>e.preventDefault()}>\n\n        <Form.Group controlId='formGridCompany'>\n          <Form.Label>Empresa</Form.Label>\n\n          {editMode ?\n          <Form.Control \n            value={company}\n            type='text' \n            placeholder='Empresa'\n            onChange={(e) => this.updateCompany('company', index, e.target.value)}\n              />\n            : <p>{company}</p>\n            }\n\n        </Form.Group>\n\n        <Form.Group controlId='formGridPosition'>\n          <Form.Label>Cargo</Form.Label>\n\n          {editMode ?\n          <Form.Control \n            value={position} \n            type='text' \n            placeholder='Cargo'\n            onChange={(e) => this.updateCompany('position', index, e.target.value)}\n              />\n            : <p>{position}</p>\n            }\n\n        </Form.Group>\n\n        <Form.Group controlId='formGridTasks'>\n          <Form.Label>\n            Tareas {editMode && (\n              <Button\n              className='addTaskButton'\n              variant='light'\n              onClick={() => this.addTask(index)}>+</Button>)}\n          </Form.Label>\n\n          {editMode ? companies[index].tasks.map((task, indexTask) => \n            <div key={indexTask} >\n              <Form.Row>\n                <Col>\n                  <Form.Control \n                    className='inputTask'\n                    value={task} \n                    type='text' \n                    placeholder='Tareas'\n                    onChange={(e) => this.updateCareer(index, indexTask, e.target.value)}\n                    />\n                </Col>\n                <Col>\n                {companies[index].tasks.length > 1 &&\n                  (<Button \n                    className='deleteTaskButton'\n                    variant='outline-danger'\n                    size='sm'\n                    onClick={() => this.deleteTask(index, indexTask)}>\n                      Borrar\n                    </Button>)}\n                </Col>\n              </Form.Row>      \n            </div>)\n              : <p>{tasks.join(' - ')}</p>\n              }\n\n        </Form.Group>\n\n        <Form.Row className='justify-content-between'>\n          <Col>\n            <Form.Group controlId='formGridDuration'>\n                <Form.Label>Duración</Form.Label>\n\n                {editMode ?\n                <Form.Control \n                  value={duration} \n                  type='text' \n                  placeholder='3 años y 6 meses'\n                  onChange={(e) => this.updateCompany('duration', index, e.target.value)}\n                    />\n                  : <p>{duration}</p>\n                  }\n\n            </Form.Group>\n          </Col>\n\n          <Col>\n            <Form.Group controlId='formGridEndDate'>\n                <Form.Label>Fecha de Finalización</Form.Label>\n\n                {editMode ?\n                <Form.Control \n                  value={endDate} \n                  type='date' \n                  placeholder='Fecha'\n                  onChange={(e) => this.updateCompany('endDate', index, e.target.value)}\n                    />\n                  : <p>{endDate}</p>\n                  }\n\n            </Form.Group>\n          </Col>\n        </Form.Row>\n\n        <Form.Row className='justify-content-between'>\n          <Button\n            className='submitButton'\n            variant={editMode ? 'primary' : 'secondary'}\n            size='lg'\n            onClick={this.toggleEditMode}>\n              {editMode ? 'Enviar' : 'Editar'}\n          </Button>\n\n          {companies.length > 1 &&\n            <Button\n              className='deleteButton'\n              variant='danger'\n              size='lg'\n              onClick={() => this.deleteCompany(index)} >\n                Eliminar\n            </Button>}\n\n        </Form.Row>   \n      </Form>\n    )\n  }\n}\n\nexport default CareerForm */","/* import React, { Component } from 'react'; */\nimport React, { useState } from 'react';\nimport CardStyled from './CardStyled';\nimport CareerForm from './CareerForm'; \nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\n// FUNCTIONAL HOOK\n\nconst Career = (props) => {\n  \n  const [companiesList, setCompaniesList] = useState(props.companiesList);\n  const defaultCompany = {\n    company: '',\n    position: '',\n    tasks: [''],\n    duration: '',\n    endDate: ''\n    };\n\n  const deleteCompany = (index) => {\n    companiesList.splice(index, 1);\n    setCompaniesList([...companiesList]);\n  };\n  \n  return (\n    <CardStyled>\n      <Container id='career' className='mt-5 card' as='section'>\n      <h2 className='title'>Profesional</h2>\n      <Button \n        variant='primary' \n        onClick={() => setCompaniesList([...companiesList, defaultCompany])}\n        block>+ Anadir Experiencia +</Button>\n        {companiesList.map((company, index) => \n          <CareerForm \n            key={index}\n            index={index}\n            companiesList={companiesList} \n            deleteCompany={deleteCompany} />\n            )}\n      </Container>\n    </CardStyled>\n  )\n};\n\nexport default Career;\n\n// CLASS COMPONENT\n\n/* class Career extends Component {\n  constructor(props) {\n    super(props)\n\n    this.addCareer = this.addCareer.bind(this);\n  }\n\n  addCareer() {\n    const {updateState, info, rootName} = this.props;\n    const {companies} = info;\n    const newCompany = Object.keys(companies[0]).reduce((prev, current) => {\n      if (Array.isArray(companies[0][current])) {\n        return {\n          ...prev,\n          [current]: ['']\n        };\n        } else {\n          return {  \n            ...prev,\n            [current]: ''\n          };\n      }})\n\n    companies.push(newCompany);\n\n    updateState(rootName, \n      {companies: companies})\n  }\n  \n  render() {\n    const {updateState, info, rootName} = this.props;\n    const {companies} = info;\n\n    return (\n      <CardStyled>\n        <Container id='career' className='mt-5 card' as='section'>\n        <h2 className='title'>Profesional</h2>\n        <Button \n          variant='primary' \n          onClick={() => this.addCareer(companies)}\n          block>+ Anadir Experiencia +</Button>\n          {companies.map((company, index) => \n            <CareerForm \n              key={index}\n              index={index}\n              updateState={updateState} \n              companies={companies} \n              rootName={rootName} />\n              )}\n        </Container>\n      </CardStyled>\n    )\n  }\n}\n\nexport default Career */","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction Footer() {\n  return (\n    <footer>\n      <Navbar bg='dark' variant='dark' expand='sm' className=\"justify-content-center\">\n        <Nav>\n          <Nav.Link href='https://www.theodinproject.com' target='_blank'>The Odin Project</Nav.Link>\n          <Nav.Link href='https://github.com/joan-kii?tab=repositories' target='_blank'>joankii's Github</Nav.Link>\n        </Nav>\n      </Navbar>\n    </footer>\n  )\n}\n\nexport default Footer;","/* import React, { Component } from 'react'; */\nimport React from 'react';\nimport Topbar from './components/TopBar';\nimport Jumbo from './components/Jumbo';\nimport Personal from './components/Personal';\nimport Education from './components/Education';\nimport Career from './components/Career';\nimport Footer from './components/Footer';\n\nconst App = () => {\n\n  const personal = {\n      name: '',\n      secondName: '',\n      email: '',\n      phone: '',\n      portfolio: '',\n      city: '',\n      country: ''\n    };\n\n  const education = [\n      {\n      school: '',\n      title: '',\n      endDate: ''\n      }\n    ];\n\n  const career = [\n    {\n    company: '',\n    position: '',\n    tasks: [''],\n    duration: '',\n    endDate: ''\n    }\n  ];\n\n  /* console.log('Infromación personal: ', personal)\n  console.log('Formación: ', education) \n  console.log(career)*/\n\n  return (\n    <div>\n      <Topbar />\n      <Jumbo />\n      <Personal personalData={personal} />\n      <Education schoolsList={education} />\n      <Career companiesList={career} />\n      <Footer />\n    </div>\n  )\n};\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}